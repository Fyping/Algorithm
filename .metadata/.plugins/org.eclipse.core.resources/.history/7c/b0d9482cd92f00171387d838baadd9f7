package leetcode;

import java.util.HashMap;

public class Solution_3 {

    public int lengthOfLongestSubstring(String s) {
    	/*HashMap<Character,Integer> hs = new HashMap<Character,Integer>();
    	for(int i=0;i<s.length();i++){
    		hs.put(s.charAt(i),i);
    	}*/
    	
    	//int count=0;
    	
    	//while(!hs.isEmpty()){
    	//	System.out.println(hs.get(count)+" : "+count);
    	//	hs.remove(count++);
    	//}
    	int start=0,end=0;
    	boolean fu=true;
    	for(int i=0;i<s.length();i++){
    		med:for(int j=i+1;j<s.length();j++){
    			boolean is=true;
    			for(int k=0;k<j;k++){
    				if(s.charAt(i)==s.charAt(k)){
    					is=false;
    					if(fu==false){
    						fu=true;
    					}
    					continue med;
    				}
    			}
    			if(is&&fu){
    				start=j;
    				fu=false;
    			}
    			if(is&&fu==false){
    				end=j;
    			}
    		}
    	}
    	return end-start;
    }
    public static void main(String[] args) {
		// TODO Auto-generated method stub
    	System.out.println((new Solution_3()).lengthOfLongestSubstring("pwwkew"));
	}

}
